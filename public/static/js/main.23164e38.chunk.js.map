{"version":3,"sources":["Components/FadeText/FadeText.module.css","App.module.css","Components/FadeText/FadeText.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","headingStyle","fontFamily","fontSize","bodyStyle","fontWeight","FadeText","props","useState","children","split","array","style","heading","className","styles","sentence","map","word","index","Fragment","key","animationDuration","animationDelay","delay","animationIterationCount","animationName","animationTimingFunction","animationFillMode","OBJLoader","THREE","model","lights","App","state","phoneLoaded","sceneSetup","width","main","clientWidth","height","clientHeight","scene","camera","position","z","renderer","antialias","aplha","setSize","appendChild","domElement","sceneBackground","load","background","composer","EffectComposer","renderPass","RenderPass","addPass","addCustomSceneObjects","addPhoneObject","addLights","startAnimationLoop","rotation","x","y","render","requestAnimationFrame","set","add","phoneMaterial","color","emissive","flatShading","specular","transparent","opacity","shininess","object","traverse","child","material","scale","setState","xhr","console","log","loaded","total","error","this","ref","document","introductionContainer","introduction","scrollPrompt","scrollContainer","scrollPoint","projectsContainer","Component","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23164e38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"word\":\"FadeText_word__2fVdl\",\"sentence\":\"FadeText_sentence__2vnbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scene\":\"App_scene__NJwvr\",\"document\":\"App_document__23dW3\",\"introductionContainer\":\"App_introductionContainer__1-pBv\",\"introduction\":\"App_introduction__1Jmpc\",\"scrollPrompt\":\"App_scrollPrompt__QpMYU\",\"scrollContainer\":\"App_scrollContainer__1Rcdz\",\"scrollPoint\":\"App_scrollPoint__32q9Q\",\"scroll\":\"App_scroll__32FKA\",\"h3Container\":\"App_h3Container__3Np-1\",\"projectsContainer\":\"App_projectsContainer__2bWI6\"};","import React, { useState, useEffect } from 'react';\nimport styles from './FadeText.module.css';\n\nconst fadeIn = `\n    @keyframes fadeIn {\n        0%   { opacity: 0; filter:blur(5px)}\n        100% { opacity: 1; filter:blur(0px)}\n    }\n`;\n\nconst headingStyle = {fontFamily: 'Roboto Mono', fontSize: '20px'};\nconst bodyStyle = {fontFamily: 'Open Sans', fontWeight: '300', fontSize: '16px'};\n\n\nconst FadeText = (props) => {\n\n    const [array, setArray] = useState(props.children.split(' '));\n\n    return (\n        \n        <div style={props.heading ? headingStyle : bodyStyle} className={styles.sentence}>\n            {array.map((word, index) => {\n                return <React.Fragment key={index}>\n                            <style children={fadeIn} />\n                            <span className={styles.word} \n                                key={index}\n                                style={{\n                                    animationDuration: `1s`,\n                                    animationDelay: `${props.delay + index/30}s`, \n                                    animationIterationCount: 1,\n                                    animationName: `fadeIn`,\n                                    animationTimingFunction: 'ease-in',\n                                    animationFillMode: 'backwards',\n                                    }}>\n                                {word}\n                            </span>\n                        </React.Fragment>\n            })}\n        </div>\n    );\n}\n\nexport default FadeText;\n","import React, { Component } from 'react';\nimport { ParallaxProvider, Parallax } from 'react-scroll-parallax';\nimport './App.css';\nimport * as THREE from 'three';\nimport OBJLoader from 'three-obj-loader';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport styles from './App.module.css';\nimport FadeText from './Components/FadeText/FadeText';\nOBJLoader(THREE);\nconst lights = [];\nvar model;\n\nexport class App extends Component {\n\n\tstate = {\n\t\tphoneLoaded: false,\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.sceneSetup();\n    \tthis.addCustomSceneObjects();\n\t\tthis.startAnimationLoop();\n\t}\n\t\n\tsceneSetup = () => {\n\t\tconst width = this.main.clientWidth;\n\t\tconst height = this.main.clientHeight;\n\t\tthis.scene = new THREE.Scene();\n\t\tthis.camera = new THREE.PerspectiveCamera(\n\t\t\t60, // fov = field of view\n\t\t\twidth / height, // aspect ratio\n\t\t\t0.1, // near plane \n\t\t\t1000 // far plane\n\t\t);\n\t\tthis.camera.position.z = 1.5;\n\n\t\tthis.renderer = new THREE.WebGLRenderer({antialias:true, aplha:true});\n\t\tthis.renderer.setSize( width, height );\n\t\tthis.main.appendChild( this.renderer.domElement );\n\n\t\tconst textureLoader = new THREE.TextureLoader();\n\t\tconst sceneBackground = textureLoader.load('./img/scene-bg.jpg');\n\t\tthis.scene.background = sceneBackground;\n\n\t\tthis.composer = new EffectComposer( this.renderer );\n\t\tvar renderPass = new RenderPass( this.scene, this.camera );\n\t\tthis.composer.addPass( renderPass );\n\t}\n\n\taddCustomSceneObjects = () => {\n\t\tthis.addPhoneObject();\n\t\tthis.addLights();\n\n\t\t// var planeTexture = new THREE.TextureLoader().load( './img/plane-bg.png' );\n\t\t// var planeMaterial = new THREE.MeshBasicMaterial( { map: planeTexture, side:THREE.DoubleSide, transparent:true, opacity: .05 } );\n\t\t\n\t\t// const planeGeometry = new THREE.PlaneGeometry(2, 2, 2);\n\t\t// var plane = new THREE.Mesh( planeGeometry, planeMaterial );\n\t\t// plane.position.set(-1, 0, -2);\n\t\t// this.scene.add( plane );\n\n\t}\n\n\tstartAnimationLoop = () => {\n\t\tif(this.state.phoneLoaded){\n\t\t\tmodel.rotation.x += 0.01;\n\t\t\tmodel.rotation.y += 0.01;\n\t\t}\n\n\n\t\tthis.composer.render();\n\t\trequestAnimationFrame(this.startAnimationLoop);\n\t}\n\n\taddLights = () => {\n\t\tlights[ 0 ] = new THREE.PointLight( 'white', 10, 0);\n\t\tlights[ 1 ] = new THREE.PointLight( 0xffffff, 2, 0);\n\t\tlights[ 2 ] = new THREE.PointLight( 0xffffff, 10, 0);\n\n\t\tlights[ 0 ].position.set(0, 200, 0);\n\t\tlights[ 1 ].position.set(100, 200, 100);\n\t\tlights[ 2 ].position.set(-100, -200, -100);\n\n\t\tthis.scene.add( lights[ 0 ] );\n\t\tthis.scene.add( lights[ 1 ] );\n\t\tthis.scene.add( lights[ 2 ] );\n\t}\n\n\taddPhoneObject = () => {\n\t\tconst phoneMaterial = new THREE.MeshPhongMaterial({\n\t\t\tcolor: '#343f50',\n\t\t\temissive: '#000',\n\t\t\tflatShading: true,\n\t\t\tspecular: '#ffffff',\n\t\t\ttransparent:true,\n\t\t\topacity:.2,\n\t\t\tshininess: 60,\n\n\t\t});\n\n\t\tthis.THREE = THREE;\n\t\tconst objLoader = new this.THREE.OBJLoader();\n\t\tobjLoader.load(\n\t\t\t'./objects/phone.obj',\n\t\t\t ( object ) => {\n\t\t\t\tobject.traverse( function( child ) {\n\t\t\t\t\tif ( child instanceof THREE.Mesh ) {\n\t\t\t\t\t\tchild.material = phoneMaterial;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tmodel = object;\n\t\t\t\tobject.scale.set(.0005, .0005, .0005);\n\t\t\t\tthis.scene.add(object);\n\t\t\t\tthis.setState({phoneLoaded: true});\n\t\t\t},\n\t\t\tfunction ( xhr ) {\n\t\t\t\tconsole.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );\n\t\t\n\t\t\t},\n\t\t\tfunction ( error ) {\t\n\t\t\t\tconsole.log( 'An error happened' );\n\t\t\t}\n\t\t)\n\t}\n\n\t\n\n\trender() {\n\t\treturn (\n\t\t\t<ParallaxProvider>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className={styles.scene} ref={ref => (this.main = ref) }></div>\n\t\t\t\t\t<div className={styles.document}>\n\t\t\t\t\t\t<div className={styles.introductionContainer}>\n\t\t\t\t\t\t\t<div className={styles.introduction}>\n\t\t\t\t\t\t\t\t<Parallax y={[30, 0]}>\n\t\t\t\t\t\t\t\t\t<FadeText heading={true} delay={0}>\n\t\t\t\t\t\t\t\t\t\tWe are You &amp; I - a digital product studio\u0003 specialising in cutting edge product design &amp; development.\n\t\t\t\t\t\t\t\t\t</FadeText>\n\t\t\t\t\t\t\t\t</Parallax>\n\t\t\t\t\t\t\t\t<FadeText delay={1}>\n\t\t\t\t\t\t\t\t\tOur goal is to build emotive and memorable digital\u0003 experiences which stimulate discussion.\n\t\t\t\t\t\t\t\t</FadeText>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={styles.scrollPrompt}>\n\t\t\t\t\t\t\t\t\t<div className={styles.scrollContainer}>\n\t\t\t\t\t\t\t\t\t\t<span className={styles.scrollPoint}></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={styles.projectsContainer}>\n\t\t\t\t\t\t\t<Parallax y={[-100, 20]}>\n\t\t\t\t\t\t\t\t<h1>Projects</h1>\n\t\t\t\t\t\t\t</Parallax>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t</ParallaxProvider>\n\t\t);\n \t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}